const accounts = {
  "ARSEN123": "ARSENPDIDDY123",
  "MatviyVes": "TON618",
  "Timasueta": "SUETOLOG",
  "Tematiks": "Fdnfanatik",
  "Koyakolo": "GIGACHAD",
  "Aloharbitrahnik123": "ARBITRAJ3",
  "TESTAC": "TESTAC",
  "NAZARK": "Geometrydash1488",
  "Egoroblox": "undertale52",
  "SIGMA228": "ebubabalku",
  "BABULKA777": "skibidi7"
};

const promoCodes = {
  "TkNJU1VEMzc=": {used: true, reward: () => addBalance(100)},           // NICUSD37
  "R0lGVFRFTQ==": {used: false, reward: () => addCase("gift")},         // GIFTTEM
  "U1BJTkNPSU4=": {used: true, reward: () => alert("–°–ø—ñ–Ω–∏ —â–µ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")}, // SPINCOIN
  "T1BFTkJBVExQQVM=": {used: true, reward: () => alert("–ë–∞—Ç–ª –ø–∞—Å –±—É–¥–µ –¥–æ–¥–∞–Ω–æ")}, // OPENBATLPAS
  "RE9OQVRMTjE0ODg=": {used: false, unlimited: true, reward: () => addBalance(100)}, // DONAT1488
  "SEFMQVZBMTAwMA==": {used: false, reward: () => addBalance(1000)},    // HALAVA1000
  "SEFMQVZYWlYwMDA=": {used: false, unlimited: true, reward: () => addBalance(1000)}, // HALAVAXXX
  "UkVBTEdJRlQ=": {used: false, unlimited: true, reward: () => addCase("gift")}       // REALGIFT
};

let currentUser = null;
let balance = 0;
let inventory = [];
let usedPromos = [];
let blockedItems = new Set();
let cart = [];
let selectedIndex = null;

function addBalance(amount) {
  balance += amount;
  saveData();
}

function saveData() {
  if (currentUser) {
    localStorage.setItem(currentUser + "_balance", balance);
    localStorage.setItem(currentUser + "_inventory", JSON.stringify(inventory));
    localStorage.setItem(currentUser + "_promos", JSON.stringify(usedPromos));
    localStorage.setItem(currentUser + "_blockedItems", JSON.stringify(Array.from(blockedItems)));
    localStorage.setItem(currentUser + "_cart", JSON.stringify(cart));
  }
}

function loadData() {
  if (currentUser) {
    balance = parseInt(localStorage.getItem(currentUser + "_balance")) || 0;
    inventory = JSON.parse(localStorage.getItem(currentUser + "_inventory")) || [];
    usedPromos = JSON.parse(localStorage.getItem(currentUser + "_promos")) || [];
    blockedItems = new Set(JSON.parse(localStorage.getItem(currentUser + "_blockedItems")) || []);
    cart = JSON.parse(localStorage.getItem(currentUser + "_cart")) || [];
    if (currentUser === "TESTAC") {
      inventory = [];
      saveData();
    }
  }
}

function loginScreen() {
  document.getElementById("app").innerHTML =
    `<h2>–í—Ö—ñ–¥ —É –∞–∫–∞—É–Ω—Ç</h2>
    <input id='login' placeholder='–õ–æ–≥—ñ–Ω'><br>
    <input id='password' placeholder='–ü–∞—Ä–æ–ª—å' type='password'><br>
    <button onclick='login()'>–£–≤—ñ–π—Ç–∏</button>`;
}

function login() {
  const login = document.getElementById("login").value.trim();
  const pass = document.getElementById("password").value;
  if (accounts[login] === pass) {
    currentUser = login;
    loadData();
    mainMenu();
  } else {
    alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
  }
}

function logout() {
  saveData();
  currentUser = null;
  loginScreen();
}

function mainMenu() {
  saveData();
  let html = `<h2>–í—ñ—Ç–∞—é, ${currentUser}</h2>`;
  html += `<p>–ë–∞–ª–∞–Ω—Å: ${balance} –Ω—ñ–∫—É—Å—ñ–≤</p>`;
  html += `<div style="display:flex; flex-wrap:wrap; justify-content:center;">`;

  html += `
    <div style="margin: 10px;">
      <img src="img/case_autumn.png" width="150"><br>
      <button onclick='buyCase("autumn")'>–ö–µ–π—Å –û—Å—ñ–Ω—å25 (40)</button>
    </div>
    <div style="margin: 10px;">
      <img src="img/case_box.png" width="150"><br>
      <button onclick='buyCase("box")'>–ë–æ–∫—Å –û—Å—ñ–Ω—å25 (20)</button>
    </div>
    <div style="margin: 10px;">
      <img src="img/case_gift.png" width="150"><br>
      <button disabled>–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å (–¢—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–æ-–∫–æ–¥)</button>
      <br><small>–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∏–π –ø—Ä–æ–º–æ-–∫–æ–¥: GIFTTEM</small><br>
      <small style="user-select:none; color:#331f00;">–ë–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏–π –ø—Ä–æ–º–æ-–∫–æ–¥ (—Å–µ–∫—Ä–µ—Ç–Ω–∏–π): REALGIFT</small>
    </div>
  `;

  html += `</div><br>`;

  html += `<button onclick='goToPromoMenu()'>üéÅ –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é –ø—Ä–æ–º–æ-–∫–æ–¥—ñ–≤</button><br>`;
  html += `<button onclick='showInventory()'>üéí –Ü–Ω–≤–µ–Ω—Ç–∞—Ä (${inventory.length})</button><br>`;
  html += `<button onclick='showCart()'>üõí –ö–æ—à–∏–∫ (${cart.length})</button><br>`;
  html += `<button onclick='logout()'>üö™ –í–∏–π—Ç–∏</button>`;

  document.getElementById("app").innerHTML = html;
}

function addCase(type) {
  if (inventory.length >= 100) {
    alert("–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  inventory.push({ type: "case", caseType: type, id: generateId() });
  saveData();
}

function buyCase(type) {
  const price = type === "autumn" ? 40 : type === "box" ? 20 : 0;
  if (balance < price) {
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω—ñ–∫—É—Å—ñ–≤!");
    return;
  }
  balance -= price;
  addCase(type);
  saveData();
  mainMenu();
}

function showInventory() {
  let html = `<h2>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä</h2>`;
  if (inventory.length === 0) {
    html += `<p>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div class="flex-center">`;
    inventory.forEach((item, idx) => {
      const isBlocked = blockedItems.has(item.id);
      if (item.type === "case") {
        html += `
          <div class="inventory-item ${selectedIndex === idx ? 'selected' : ''}">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br />
            <img src="img/case_${item.caseType}.png" width="120" /><br />
            <button onclick="openCase(${idx})" ${isBlocked ? "disabled" : ""}>–í—ñ–¥–∫—Ä–∏—Ç–∏</button><br />
            <button onclick="toggleBlockItem(${idx}); event.stopPropagation();">
              ${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}
            </button><br />
            <button onclick="addToCart(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""}>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button><br />
            <button onclick="deleteItem(${idx}); event.stopPropagation();" style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      } else if (item.type === "bill") {
        const premium = item.premium ? "üåü–ü—Ä–µ–º—ñ—É–º" : "";
        html += `
          <div class="inventory-item ${selectedIndex === idx ? 'selected' : ''}" onclick="selectItem(${idx})" style="cursor:pointer;">
            <img src="img/${item.img}" width="120" /><br />
            <b>${item.name}</b><br />
            <i>${item.rarity}</i><br />
            –Ø–∫—ñ—Å—Ç—å: ${item.quality} ${premium}<br />
            <button onclick="toggleBlockItem(${idx}); event.stopPropagation();">
              ${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}
            </button><br />
            <button onclick="addToCart(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""}>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button><br />
            <button onclick="deleteItem(${idx}); event.stopPropagation();" style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      }
    });
    html += `</div>`;
  }
  html += `<br><button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function getCaseName(type) {
  if (type === "autumn") return "–û—Å—ñ–Ω–Ω—ñ–π –∫–µ–π—Å";
  if (type === "box") return "–ö–æ—Ä–æ–±–∫–∞";
  if (type === "gift") return "–ü–æ–¥–∞—Ä—É–Ω–æ–∫";
  return "–ö–µ–π—Å";
}

function toggleBlockItem(index) {
  const item = inventory[index];
  if (!item) return;
  if (blockedItems.has(item.id)) {
    blockedItems.delete(item.id);
  } else {
    blockedItems.add(item.id);
  }
  saveData();
  showInventory();
}

function addToCart(index) {
  const item = inventory[index];
  if (!item) return;
  if (blockedItems.has(item.id)) {
    alert("–¶–µ–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.");
    return;
  }
  cart.push(item);
  inventory.splice(index, 1); // –í–∏–¥–∞–ª—è—î–º–æ –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä—è
  saveData();
  showInventory();
}

function deleteItem(index) {
  if (!confirm("–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç?")) return;
  inventory.splice(index, 1);
  saveData();
  showInventory();
}

function showCart() {
  let html = `<h2>–ö–æ—à–∏–∫</h2>`;
  if (cart.length === 0) {
    html += `<p>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div class="flex-center">`;
    cart.forEach((item, idx) => {
      if (item.type === "case") {
        html += `
          <div class="inventory-item">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br />
            <img src="img/case_${item.caseType}.png" width="120" /><br />
            <button onclick="removeFromCart(${idx})">–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—à–∏–∫–∞</button>
          </div>
        `;
      } else if (item.type === "bill") {
        const premium = item.premium ? "üåü–ü—Ä–µ–º—ñ—É–º" : "";
        html += `
          <div class="inventory-item">
            <img src="img/${item.img}" width="120" /><br />
            <b>${item.name}</b><br />
            <i>${item.rarity}</i><br />
            –Ø–∫—ñ—Å—Ç—å: ${item.quality} ${premium}<br />
            <button onclick="removeFromCart(${idx})">–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –∫–æ—à–∏–∫–∞</button>
          </div>
        `;
      }
    });
    html += `</div>`;
  }
  html += `<br><button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function removeFromCart(index) {
  if (!confirm("–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç –∑ –∫–æ—à–∏–∫–∞?")) return;
  cart.splice(index, 1);
  saveData();
  showCart();
}

function openCase(index) {
  const item = inventory[index];
  if (!item || item.type !== "case") {
    alert("–í–∏–±—Ä–∞–Ω–æ –Ω–µ –∫–µ–π—Å");
    return;
  }
  if (blockedItems.has(item.id)) {
    alert("–¶–µ–π –∫–µ–π—Å –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ");
    return;
  }
  // –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–µ–π—Å—É:
  // –í—ñ–¥–Ω—ñ–º–∞—î–º–æ –∫–µ–π—Å –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä—è
  inventory.splice(index, 1);

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑ –∫–µ–π—Å—É (—Å–ø—Ä–æ—â–µ–Ω–æ)
  const drop = generateDrop(item.caseType);

  // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–¥–º–µ—Ç —É —ñ–Ω–≤–µ–Ω—Ç–∞—Ä
  inventory.push(drop);

  saveData();
  alert(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏: ${drop.name} (${drop.rarity}, —è–∫—ñ—Å—Ç—å: ${drop.quality}${drop.premium ? ', –ø—Ä–µ–º—ñ—É–º' : ''})`);
  showInventory();
}

function generateDrop(caseType) {
  // –ü—Ä–∏–∫–ª–∞–¥ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó (–ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—ñ–¥–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ø—ñ–¥ —Ç–≤—ñ–π –ø—Ä–æ–µ–∫—Ç)
  const rarities = ["–ó–≤–∏—á–∞–π–Ω–∞", "–í–∏–Ω—è—Ç–∫–æ–≤–∞", "–ï–ø—ñ—á–Ω–∞", "–°–µ–∫—Ä–µ—Ç–Ω–∞"];
  const qualities = ["–ó–Ω–æ—à–µ–Ω–∞", "–ü—ñ—Å–ª—è —É—Ä–æ–∫—É", "–ü—ñ—Å–ª—è –∫–æ–Ω—Å–µ—Ä–≤–∞—Ü—ñ—ó", "–ü—Ä—è–º–æ –∑ —Ü–µ—Ö—É"];
  const qualityChances = [0.225, 0.40, 0.25, 0.125]; // –ü—Ä–∏–∫–ª–∞–¥

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó —Ä—ñ–¥–∫–æ—Å—Ç—ñ
  let rarityRoll = Math.random();
  let rarity = "–ó–≤–∏—á–∞–π–Ω–∞";
  if (rarityRoll < 0.01) rarity = "–°–µ–∫—Ä–µ—Ç–Ω–∞";
  else if (rarityRoll < 0.15) rarity = "–ï–ø—ñ—á–Ω–∞";
  else if (rarityRoll < 0.50) rarity = "–í–∏–Ω—è—Ç–∫–æ–≤–∞";

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—Å—Ç—ñ
  let quality = "–ó–Ω–æ—à–µ–Ω–∞";
  let roll = Math.random();
  let acc = 0;
  for (let i = 0; i < qualityChances.length; i++) {
    acc += qualityChances[i];
    if (roll < acc) {
      quality = qualities[i];
      break;
    }
  }

  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–µ–º—ñ—É–º (7% —à–∞–Ω—Å)
  const premium = Math.random() < 0.07 && quality !== "–ó–Ω–æ—à–µ–Ω–∞";

  // –ü—ñ–¥–±—ñ—Ä –Ω–∞–∑–≤–∏ —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä—ñ–¥–∫–æ—Å—Ç—ñ —Ç–∞ —è–∫–æ—Å—Ç—ñ
  const name = `${caseType} –∫—É–ø—é—Ä–∞`;
  const img = `${rarity.toLowerCase()}.png`;

  return {
    type: "bill",
    name: name,
    rarity: rarity,
    quality: quality,
    premium: premium,
    img: img,
    id: generateId()
  };
}

function generateId() {
  return Math.random().toString(36).substring(2, 12) + Date.now().toString(36);
}

function goToPromoMenu() {
  let html = `<h2>–ü—Ä–æ–º–æ-–∫–æ–¥–∏</h2>
  <input id="promoInput" placeholder="–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ-–∫–æ–¥" style="width: 200px;">
  <button onclick="applyPromo()">–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏</button><br><br>
  <div id="promoList"></div>
  <br><button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
  renderPromoList();
}

function renderPromoList() {
  let listHtml = "<ul>";
  for (const codeBase64 in promoCodes) {
    const decoded = atob(codeBase64);
    const promo = promoCodes[codeBase64];
    const status = promo.used ? "(–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ)" : "(–¥–æ—Å—Ç—É–ø–Ω–∏–π)";
    listHtml += `<li><b>${decoded}</b> ${status}</li>`;
  }
  listHtml += "</ul>";
  document.getElementById("promoList").innerHTML = listHtml;
}

function applyPromo() {
  const input = document.getElementById("promoInput").value.trim();
  const encodedInput = btoa(input);

  if (!(encodedInput in promoCodes)) {
    alert("–ü—Ä–æ–º–æ-–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    return;
  }
  const promo = promoCodes[encodedInput];
  if (promo.used && !promo.unlimited) {
    alert("–ü—Ä–æ–º–æ-–∫–æ–¥ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ");
    return;
  }
  promo.reward();
  if (!promo.unlimited) promo.used = true;
  usedPromos.push(encodedInput);
  saveData();
  alert("–ü—Ä–æ–º–æ-–∫–æ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!");
  goToPromoMenu();
}

loginScreen();
